[tool.poetry]
name = "AdventOfCode"
version = "0.1.0"
description = "Solutions to Advent of Code puzzles"
authors = ["Andreas Midjord <midjord.andreas@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10, <3.11"
regex = "^2023.10.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
ruff = "^0.1.7"
black = "^23.11.0"
pyright = "^1.1.338"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 80

[tool.ruff]
line-length = 80
fixable = ["ALL"]
select = [
    "D",  # pydocstyle
    "F",  # pyflakes
    "PT", # pytest
    "E",  # pycodestyle
    "W",  # pycodestyle
    "I001", # isort
]
ignore = [
    "D100",  # Missing docstring in public module
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D107",  # Missing docstring in `__init__` method
    "D417",  # Missing argument description for *args, **kwargs
    "D211",
    "D213",
]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(message)s"
